#!/bin/bash
##############################
# Log in teleport server.
##############################

set -eu

for bin in gh jq
do
    command -v ${bin} > /dev/null
done

TELEPORT_CLUSTER=${1}
TELEPORT_KUBE_CLUSTER=${1}
TELEPORT_PROXY=${1}
TELEPORT_AUTH=github
TELEPORT_USER=$(gh api user | jq -r .login)
TELEPORT_LOGIN_BIND_ADDR=localhost:8000
KUBE_CURRENT_CONTEXT=$(kubectl config current-context)
KUBE_TELEPORT_CONTEXT=${2:-${1}}
KUBE_TELEPORT_CONTEXT_DEFAULT=${1}-${1}
KUBE_TELEPORT_USER=${1}-${1}

if [ -z "${TELEPORT_USER}" -o "${TELEPORT_USER}" = "null" ]; then
    echo -e "\e[31mERROR: Fail to fetch github user name.\e[m"
    exit 1
fi

# Log in teleport
tsh login --proxy ${TELEPORT_PROXY} --auth ${TELEPORT_AUTH} --user ${TELEPORT_USER} --bind-addr ${TELEPORT_LOGIN_BIND_ADDR}
tsh kube login ${TELEPORT_KUBE_CLUSTER}
if [ "$(kubectl config current-context)" != "${KUBE_TELEPORT_CONTEXT_DEFAULT}" ]; then
    echo -e "\e[31mERROR: Fail to log in teleport server.\e[m"
    kubectl config use-context ${KUBE_CURRENT_CONTEXT}
    exit 1
fi

# Set environment variables fot tsh to kubeconfig
kubectl config set-credentials ${KUBE_TELEPORT_USER} --exec-env=TELEPORT_CLUSTER=${TELEPORT_CLUSTER}
kubectl config set-credentials ${KUBE_TELEPORT_USER} --exec-env=TELEPORT_PROXY=${TELEPORT_PROXY}
kubectl config set-credentials ${KUBE_TELEPORT_USER} --exec-env=TELEPORT_AUTH=${TELEPORT_AUTH}
kubectl config set-credentials ${KUBE_TELEPORT_USER} --exec-env=TELEPORT_USER=${TELEPORT_USER}
kubectl config set-credentials ${KUBE_TELEPORT_USER} --exec-env=TELEPORT_LOGIN_BIND_ADDR=${TELEPORT_LOGIN_BIND_ADDR}

# Rename kube context
if kubectl config get-contexts ${KUBE_TELEPORT_CONTEXT} &> /dev/null; then
    kubectl config delete-context ${KUBE_TELEPORT_CONTEXT}
fi
kubectl config rename-context $(kubectl config current-context) ${KUBE_TELEPORT_CONTEXT}

# Switch current context
kubectl config use-context ${KUBE_CURRENT_CONTEXT}
